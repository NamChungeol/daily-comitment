Built in namespace > Global namespace > Local/Enclosing namespace



# BUILT IN NAMESPACE
__builtins__ 모듈은 파이썬 인터프리터에서 항상 사용 가능한 내장 모듈이며, 파이썬 프로그램에서 자주 
사용되는 많은 내장 함수와 예외 클래스, 그리고 내장 상수들이 포함되어 있습니다. 따라서 dir(__builtins__)는
파이썬에서 기본적으로 사용할 수 있는 내장 함수와 객체를 나열하는 데 사용됩니다.




# GLOBAL NAMESPACE
Python에서 global namespace는 전역 네임스페이스라고도하며, 현재 실행 중인 모듈의 전역 영역에서 정의된 모든
이름(변수, 함수, 클래스 등)에 대한 딕셔너리입니다. 즉, global namespace는 현재 모듈에서 정의된 이름들의 컨테이너이며, 
모듈 레벨에서 정의된 모든 변수, 함수, 클래스 등이 포함됩니다. 이 네임스페이스의 이름은 모듈 레벨에서 정의되며, 해당 
모듈 내의 모든 함수, 클래스 및 다른 블록에서 참조할 수 있습니다.
global namespace에서 이름이 정의된 경우, 해당 이름은 모든 함수 및 클래스에서 사용할 수 있습니다. 따라서 모듈 수준에서 
정의된 변수는 모듈 내의 모든 함수에서 공유되며, 함수 내에서 선언된 변수는 함수의 로컬 변수로 처리됩니다.

예를 들어, 다음과 같은 코드에서 x와 y 변수는 global namespace에서 정의됩니다.
x = 1
def foo():
    y = 2

print(globals())

여기서 x는 모듈 레벨에서 정의된 전역 변수입니다. foo() 함수 내에서 y 변수를 정의하면 y는 foo() 함수의 로컬 변수가 됩니다. 
x 변수는 foo() 함수에서 사용될 수 있습니다. 그러나 y 변수는 global namespace에서 사용할 수 없습니다.



# LOCAL NAMESPACE

print(locals())

Python에서 local namespace는 함수 내에서 정의된 이름(변수, 함수, 클래스 등)들의 딕셔너리입니다. 
즉, 함수의 지역 영역에서 정의된 모든 이름들의 컨테이너입니다.

local namespace는 함수가 호출될 때마다 생성되며, 함수의 실행이 완료되면 파괴됩니다. 
함수 내에서 정의된 변수는 로컬 변수로 취급되며, 함수 외부에서는 사용할 수 없습니다.

함수 내에서 변수를 할당하면 해당 변수는 로컬 namespace에서 정의됩니다. 함수가 호출될 때마다 로컬 namespace가 생성되므로, 
동일한 이름을 가진 변수를 함수 내부에서 사용할 수 있습니다.


즉, local namespace는 함수 내에서 사용되는 이름의 범위를 제한하고, 함수 외부에서는 해당 이름에 접근할 수 없도록 보호합니다.



# ENCLOSING NAMESPACE



